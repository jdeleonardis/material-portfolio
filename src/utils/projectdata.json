
{
    "results": [
        {
            "id": 1,
            "appName": "Student Management System For Online Learning (SMSOL)",
            "description": "The Student Management System For Online Learning app is the second group project completed at the Full Stack Bootcamp at UNC.  This application allows a teacher to schedule a time for online tutoring with a student.  My responsibilities included the calendar functionality, including a modal that allows users to update events; both sequelize models;  and all of the API routes used to insert, update, and delete calendar events and students.",
            "techUsed": ["FullCalendar", "Sequelize", "MySql", "Express", "Express-Handlebars", "Node.js", "Moment.js", "Bootstrap", "jQuery"],
            "imgLocation": "smsol.png",
            "repoAddress": "https://github.com/jdeleonardis/Student-Management-System-For-Online-Learning",
            "deployedAddress": "https://jdeleonardis-project2-smsol.herokuapp.com/",
            "type": "school"
        }
        ,
        {
            "id": 2,
            "appName": "Story Fumbles",
            "description": "Story Fumbles is the third and final group project completed at the Full Stack Bootcamp at UNC. It was created as a way for young children as well as non-native English speakers to practice reading and writing, while at the same time having fun using Mad Libs-style stories. I created the entire backend for this project, including all Mongo models, routes and controllers. I also created the front end page used for creating new templates.",
            "techUsed": ["React", "JSX", "React Router", "Firebase", "Web Speech API", "ES6", "Express", "Node.js", "axios", "MongoDB", "Mongoose", "React-Bootstrap", "AtlasDB"],
            "imgLocation": "story-fumbles.png",
            "repoAddress": "https://github.com/jdeleonardis/Story_Fumbles",
            "deployedAddress": "https://story-fumble-app.herokuapp.com/",
            "type": "school"
        }
        ,        
        {
            "id": 3,
            "appName": "Employee Directory",
            "description": "Employee Directory makes use of React.js to make a component based application.  There is an API call that uses randomuser.me to retrieve bogus employee information.  The user can search by name or click on any column to sort.",
            "techUsed": ["Bootstrap", "React", "API to randomuser.me"],
            "imgLocation": "directory.png",
            "repoAddress": "https://github.com/jdeleonardis/Employee-Directory",
            "deployedAddress": "https://jdeleonardis.github.io/Employee-Directory/",
            "type": "school"
        },           
        {
            "id": 4,
            "appName": "Eat Da Burger",
            "description": "At first glance, the Eat Da Burger app appears to be very simple.  You enter the name of a burger you want to eat, and save it.  Then, you click the 'Devour It' button, and the burger moves to the 'Eaten' side of the page.  However, the deployed app makes use of several learned concepts, including restful APIs (working with a mysql database), express handlebars, object relational mapper (ORM), and the model view controller (MVC) paradigm.",
            "techUsed": ["MySql", "Express", "Express-Handlebars", "Node.js", "jQuery"],
            "imgLocation": "Eat Da Burger.png",
            "repoAddress": "https://github.com/jdeleonardis/Eat-Da-Burger",
            "deployedAddress": "https://jdeleonardis-burger-app.herokuapp.com/",
            "type": "school"            
        },
        {
            "id": 5,
            "appName": "Pantry Buddy",
            "description": "The Pantry Buddy app is the first group project completed at the Full Stack Bootcamp at UNC.  This application required selecting a CSS framework we had not used in class (Bulma), two external API calls (Spoonacular and NutritionIX), and another API library (Twitter Typeahead).  The application allows a user to select ingredients in their pantry, retrieve a list of recipes based on those ingredients, and view nutritional information when recipes are clicked.",
            "techUsed": ["Bulma", "Spoonacular API", "NutritionIX API", "Twitter Typeahead", "Bloodhound.js", "jQuery"],
            "imgLocation": "pantrybuddy.png",
            "repoAddress": "https://github.com/jdeleonardis/Pantry-Buddy",
            "deployedAddress": "https://jdeleonardis.github.io/Pantry-Buddy/",
            "type": "school"
        },
        {
            "id": 6,
            "appName": "Weather Dashboard",
            "description": "This application allows a user to enter a city name.  When that city is entered, the current forecast is displayed, as well as the 5 day forecast. Additionally, the history of cities selected is saved to local storage, and the last city selected is automatically retrieved.  The application calls two different endpoints on a free weather API.",
            "techUsed": ["Bootstrap", "Open Weather Map API", "jQuery"],
            "imgLocation": "Weather Dashboard.png",
            "repoAddress": "https://github.com/jdeleonardis/Weather-Dashboard",
            "deployedAddress": "https://jdeleonardis.github.io/Weather-Dashboard/",
            "type": "school"
        },
        {
            "id": 7,
            "appName": "Day Planner",
            "description": "The Day Planner allows a user to save their day's tasks to local storage.  The time blocks are color coded based on the block being in the past, present, or future.  The moment.js library is used to determine the current date and time.",
            "techUsed": ["Bootstrap", "Moment.js", "jQuery"],
            "imgLocation": "Day Planner.png",
            "repoAddress": "https://github.com/jdeleonardis/Day-Planner",
            "deployedAddress": "https://jdeleonardis.github.io/Day-Planner/",
            "type": "school"
        }
        ,     
        {
            "id": 8,
            "appName": "Employee Summary",
            "description": "The Employee Summary application is actually a template engine testing the use of node.js and the npm inquirer and jest modules. In addition, the application tests the knowledge of classes, inheritance, and some debugging of previously existing code.",
            "techUsed": ["Bootstrap", "inquirer", "jest", "jQuery"],
            "imgLocation": "Team Generator.png",
            "repoAddress": "https://github.com/jdeleonardis/homework_10_employee_summary",
            "deployedAddress": "https://jdeleonardis.github.io/homework_10_employee_summary/",
            "type": "school"
        }
        ,
        {
            "id": 9,
            "appName": "Morrisville Cat Hospital",
            "description": "This application is currently being written for a business owner/veterinarian in Morrisville, NC with special emphasis placed on mobile responsiveness and Section 508 Accessibility. The site is a MERN stack application, and uses several React libraries to handle the many forms that the business needs. When a form is completed and submitted, an email is sent (using Nodemailer) to the business including all form answers. There are several interesting UX elements on the site, including glassmorphism on the front page, buttons that transform when hovered over, and extensive user interaction 'helpers' such as toasts notifying users of successful form interactions and gentle 'reminders' on user errors or form incompletion.",
            "techUsed": ["React","React-Bootstrap", "Formik/Yup", "React-Media", "React-Reveal", "React-Toastify", "React-Datepicker", "recaptcha", "Node.js", "Express", "Nodemailer", "React Router", "Media queries"],
            "imgLocation": "MCH.png",
            "repoAddress": "https://github.com/jdeleonardis/morrisville_cat_hospital",
            "type": "professional"
        }         
        ,
        {
            "id": 10,
            "appName": "Yoga With Melissa Bennett",
            "description": "This mobile responsive MERN stack application was built for a volunteer yoga teacher that works with Warriors At Ease, an organization focused on the well being of our country’s veterans. The application gives information about the teacher and class, and allows students to sign up for classes at different locations. Additionally, the site gives the teacher the ability to log in to an admin page (using json web tokens for security) where she can add, edit, and cancel classes using a calendar (open source library ‘react big calendar’). When classes are cancelled, the teacher can create a message that is automatically sent as email to all students that have signed up for a class.",
            "techUsed": ["React","React-Bootstrap", "React-Big-Calendar", "EmailJS", "JSON Web Tokens (JWT)", "React Router", "geocoding API", "axios", "Node.js", "Express", "MongoDB", "Mongoose", "AtlasDB"],
            "imgLocation": "yogamb.png",
            "repoAddress": "https://github.com/jdeleonardis/yoga_with_melissa_bennett_react",
            "deployedAddress": "https://yogawithmelissabennett.com",
            "type": "professional"
        }     
                 
    ]
}